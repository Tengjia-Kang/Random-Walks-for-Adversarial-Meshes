import numpy as np
import os

attacked_models_dir = "./"

for filename in os.listdir(attacked_models_dir):
    if not filename.endswith(".npz"):
        continue
    if len(filename.split('_T')[1].split('_')) > 1:
        curr_obj_name = "T" + filename.split('_T')[1].split('_')[0]
    else:
        curr_obj_name = "T" + filename.split('_T')[1].split('.')[0]
    mesh_data = np.load(filename, encoding='latin1', allow_pickle="True")
    #model_id = curr_obj_name[1:]
    #model_name = filename.split('_T')[0].split('_')[-1]
    obj_file = open(curr_obj_name + ".obj", "w")

    num_vertices = len(mesh_data['vertices'])
    num_faces = len(mesh_data['faces'])
    num_coords_texture = 0
    obj_file.write("####\n#\n# OBJ File Generated by Meshlab\n#\n####\n# Object " + curr_obj_name + ".obj\n#\n# Vertices: " + str(num_vertices) + "\n# Faces: " + str(num_faces) + "\n#\n####\n")
    for vertex in mesh_data['vertices']:
        obj_file.write("v "+ str(vertex[0]) + " " + str(vertex[1]) + " " + str(vertex[2]) + " \n")
    obj_file.write("# " + str(num_vertices) +" vertices, 0 vertices normals\n\n")
    for face in mesh_data['faces']:
        obj_file.write("f "+ str(face[0] + 1) + " " + str(face[1] + 1) + " " + str(face[2] + 1) + " \n")

    obj_file.write("# " + str(num_faces) + " faces, " + str(num_coords_texture) + " coords texture\n\n# End of File")
    obj_file.close()

